"""Crate tables

Revision ID: 1bda5c428b83
Revises: 
Create Date: 2024-04-03 11:07:26.642551

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "1bda5c428b83"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "author",
        sa.Column("id_author", sa.Integer(), nullable=False),
        sa.Column("author", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id_author"),
    )
    op.create_table(
        "book",
        sa.Column("id_book", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("cover", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id_book"),
    )
    op.create_table(
        "discount",
        sa.Column("id_discount", sa.Integer(), nullable=False),
        sa.Column("discount", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id_discount"),
    )
    op.create_table(
        "file",
        sa.Column("id_file", sa.Integer(), nullable=False),
        sa.Column("format", sa.String(length=10), nullable=False),
        sa.Column("file", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id_file"),
    )
    op.create_table(
        "genre",
        sa.Column("id_genre", sa.Integer(), nullable=False),
        sa.Column("genre", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id_genre"),
    )
    op.create_table(
        "book_author",
        sa.Column("id_book_author", sa.Integer(), nullable=False),
        sa.Column("id_book", sa.Integer(), nullable=False),
        sa.Column("id_author", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_author"],
            ["author.id_author"],
        ),
        sa.ForeignKeyConstraint(
            ["id_book"],
            ["book.id_book"],
        ),
        sa.PrimaryKeyConstraint("id_book_author"),
        sa.UniqueConstraint("id_book", "id_author", name="idx_unique_book_author"),
    )
    op.create_table(
        "book_file",
        sa.Column("id_book_file", sa.Integer(), nullable=False),
        sa.Column("id_book", sa.Integer(), nullable=False),
        sa.Column("id_file", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_book"],
            ["book.id_book"],
        ),
        sa.ForeignKeyConstraint(
            ["id_file"],
            ["file.id_file"],
        ),
        sa.PrimaryKeyConstraint("id_book_file"),
        sa.UniqueConstraint("id_book", "id_file", name="idx_unique_book_file"),
    )
    op.create_table(
        "book_genre",
        sa.Column("id_book_genre", sa.Integer(), nullable=False),
        sa.Column("id_book", sa.Integer(), nullable=False),
        sa.Column("id_genre", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_book"],
            ["book.id_book"],
        ),
        sa.ForeignKeyConstraint(
            ["id_genre"],
            ["genre.id_genre"],
        ),
        sa.PrimaryKeyConstraint("id_book_genre"),
        sa.UniqueConstraint("id_book", "id_genre", name="idx_unique_book_genre"),
    )
    op.create_table(
        "user",
        sa.Column("id_user", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fullname", sa.Text(), nullable=True),
        sa.Column("username", sa.Text(), nullable=True),
        sa.Column(
            "last_activity",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "registration_date",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("base", sa.Integer(), server_default="0", nullable=False),
        sa.Column("id_discount", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_discount"],
            ["discount.id_discount"],
        ),
        sa.PrimaryKeyConstraint("id_user"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user")
    op.drop_table("book_genre")
    op.drop_table("book_file")
    op.drop_table("book_author")
    op.drop_table("genre")
    op.drop_table("file")
    op.drop_table("discount")
    op.drop_table("book")
    op.drop_table("author")
    # ### end Alembic commands ###
